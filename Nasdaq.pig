file = load 'hdfs:///pigdata' using PigStorage(',','-tagFile') as (FileName:chararray, Date:chararray, Open, High, Low,Close,Vol,AdjClose:double);
values = foreach file generate FileName, Date, AdjClose as (v:double);
values = foreach values generate FileName, flatten(STRSPLIT(Date,'-',3)), v as (v:double);
values = filter values by $1 != 'Date';
val = foreach values generate $0,$1,$2,$3,$4 as (v:double);
grp_val = GROUP val BY ($0,$1,$2);
max_mon = foreach grp_val {sorted=order val by $3 DESC; top=limit sorted 1; generate flatten(top) as (v1,v2,v3,v4,v5:double);};
min_mon = foreach grp_val {sorted=order val by $3 ASC; top=limit sorted 1; generate flatten(top) as (v1,v2,v3,v4,v5:double);};
gp = JOIN max_mon BY ($0,$1,$2), min_mon BY ($0,$1,$2);
xi = foreach gp generate $0,($4-$9)/$9 as (v:double);
A = group xi by $0;
xbar = foreach A generate group, SUM(xi.$1)/COUNT(xi.$1) as (v:double);
temp = JOIN xi BY $0, xbar BY $0;
temp = foreach temp generate $0,($1-$3)*($1-$3) as (v:double);
B = group temp by $0;
temp1 = foreach B generate group, SUM(temp.$1)/(COUNT(temp.$1)-1) as (v:double);
vol = foreach temp1 generate $0, SQRT($1) as (v:double);
vol = FILTER vol by $1 > 0;
vol = foreach vol generate flatten(STRSPLIT($0,'\\.',2))as(o1:bytearray,o2:bytearray),$1 as (v:double);
vol = foreach vol generate $0, $2 as (v:double);
high_vol = ORDER vol BY $1 DESC;
high_vol = LIMIT high_vol 10;
low_vol = order vol by $1 ASC;
low_vol = LIMIT low_vol 10;
outp = UNION low_vol,high_vol;
store outp into 'hdfs:///pigdata/Stocks_out';
